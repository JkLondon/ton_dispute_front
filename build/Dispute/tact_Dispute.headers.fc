;;
;; Header files for Dispute
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_comment
tuple __tact_string_builder_start_comment() inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_end_slice
slice __tact_string_builder_end_slice(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_float_to_string
slice __tact_float_to_string(int src, int digits) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InternalSetBet$_store
builder $InternalSetBet$_store(builder build_0, (int, int, slice) v) inline;

;; $InternalSetBet$_store_cell
cell $InternalSetBet$_store_cell((int, int, slice) v) inline;

;; $WinBetDetails$_load
(slice, ((int, int, slice, int))) $WinBetDetails$_load(slice sc_0) inline;

;; $DrawBetDetails$_load
(slice, ((int, int, slice, int))) $DrawBetDetails$_load(slice sc_0) inline;

;; $CloseWinBet$_store
builder $CloseWinBet$_store(builder build_0, (int) v) inline;

;; $CloseWinBet$_store_cell
cell $CloseWinBet$_store_cell((int) v) inline;

;; $CloseDrawBet$_store
builder $CloseDrawBet$_store(builder build_0, (int) v) inline;

;; $CloseDrawBet$_store_cell
cell $CloseDrawBet$_store_cell((int) v) inline;

;; $Vote$_load
(slice, ((int, int))) $Vote$_load(slice sc_0) inline;

;; $PlayerBetInit$_load
(slice, ((int))) $PlayerBetInit$_load(slice sc_0) inline;

;; $InitialState$_load
(slice, ((slice, slice, cell, cell))) $InitialState$_load(slice sc_0) inline;

;; $Outcome$_store
builder $Outcome$_store(builder build_0, (int, slice, int, int) v) inline;

;; $Outcome$_store_cell
cell $Outcome$_store_cell((int, slice, int, int) v) inline;

;; $Outcome$_load
(slice, ((int, slice, int, int))) $Outcome$_load(slice sc_0) inline;

;; $Outcome$_as_optional
tuple $Outcome$_as_optional((int, slice, int, int) v) inline;

;; $Outcome$_load_opt
tuple $Outcome$_load_opt(cell cl) inline;

;; $Referee$_store
builder $Referee$_store(builder build_0, (slice, int) v) inline;

;; $Referee$_store_cell
cell $Referee$_store_cell((slice, int) v) inline;

;; $Referee$_load
(slice, ((slice, int))) $Referee$_load(slice sc_0) inline;

;; $Referee$_as_optional
tuple $Referee$_as_optional((slice, int) v) inline;

;; $Referee$_load_opt
tuple $Referee$_load_opt(cell cl) inline;

;; $Dispute$_store
builder $Dispute$_store(builder build_0, (int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) v) inline;

;; $Dispute$_load
(slice, ((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int))) $Dispute$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Outcome$_not_null
((int, slice, int, int)) $Outcome$_not_null(tuple v) inline;

;; $Referee$_not_null
((slice, int)) $Referee$_not_null(tuple v) inline;

;; $Fees$_to_external
(int, int) $Fees$_to_external(((int, int)) v) inline;

;; $PlayerBet$init$_store
builder $PlayerBet$init$_store(builder build_0, (slice, int) v) inline;

;; $Dispute$init$_load
(slice, (((slice, slice, cell, cell)))) $Dispute$init$_load(slice sc_0) inline;

;; $Dispute$_contract_init
(int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $Dispute$_contract_init((slice, slice, cell, cell) $msg) impure inline_ref;

;; $Dispute$_contract_load
(int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $Dispute$_contract_load() impure inline_ref;

;; $Dispute$_contract_store
() $Dispute$_contract_store((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Int$_fun_toCoinsString
slice $Int$_fun_toCoinsString(int $self) impure inline;

;; $String$_fun_asComment
cell $String$_fun_asComment(slice $self) impure inline_ref;

;; $PlayerBet$_init_child
(cell, cell) $PlayerBet$_init_child(cell sys', slice $parent, int $seqno) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_body_value
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value(slice to, cell body, int value) inline;

;; $CloseWinBet$_constructor_outcomeID
((int)) $CloseWinBet$_constructor_outcomeID(int outcomeID) inline;

;; $Dispute$_fun_DistributeToWinner
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), ()) $Dispute$_fun_DistributeToWinner((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self, int $winnerID) impure inline_ref;

;; $CloseDrawBet$_constructor_id
((int)) $CloseDrawBet$_constructor_id(int id) inline;

;; $Dispute$_fun_DistributeToAll
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), ()) $Dispute$_fun_DistributeToAll((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_bank
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), slice) $Dispute$_fun_bank((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_outcomes
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), cell) $Dispute$_fun_outcomes((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_winnerID
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), int) $Dispute$_fun_winnerID((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_balance
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), slice) $Dispute$_fun_balance((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getName
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), slice) $Dispute$_fun_getName((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getDescription
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), slice) $Dispute$_fun_getDescription((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getReferees
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), cell) $Dispute$_fun_getReferees((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getPlayerBets
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), cell) $Dispute$_fun_getPlayerBets((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getOutcomes
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), cell) $Dispute$_fun_getOutcomes((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Fees$_constructor_percent_flat
((int, int)) $Fees$_constructor_percent_flat(int percent, int flat) inline;

;; $Dispute$_fun_getFees
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), (int, int)) $Dispute$_fun_getFees((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getIsVoteFinished
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), int) $Dispute$_fun_getIsVoteFinished((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_getWinnerOutcomeID
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), int) $Dispute$_fun_getWinnerOutcomeID((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self) impure inline_ref;

;; $Dispute$_fun_forward
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), ()) $Dispute$_fun_forward((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Dispute$_fun_reply
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), ()) $Dispute$_fun_reply((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self, cell $body) impure inline;

;; $Dispute$_fun_notify
((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int), ()) $Dispute$_fun_notify((int, slice, slice, cell, cell, cell, int, int, int, int, int, int, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_body_value_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_code_data(slice to, cell body, int value, cell code, cell data) inline;

;; $InternalSetBet$_constructor_outcomeID_amount_playerAddress
((int, int, slice)) $InternalSetBet$_constructor_outcomeID_amount_playerAddress(int outcomeID, int amount, slice playerAddress) inline;

;; $SendParameters$_constructor_to_bounce_value
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value(slice to, int bounce, int value) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
